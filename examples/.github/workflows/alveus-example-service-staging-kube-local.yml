name: example-service-staging-kube-local
"on":
  workflow_call: {}
  workflow_dispatch: {}
concurrency:
  group: kube-local
defaults:
  run:
    shell: bash
jobs:
  kube-local:
    name: kube-local
    runs-on:
    - ubuntu-latest
    env:
      ARGOCD_APPLICATION_FILE: .alveus/applications/example-service-staging-kube-local.yaml
      GIT_COMMIT_MESSAGE: "feat(staging): ðŸš€ deploy to kube-local"
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false
        ref: ""
    - name: git-config
      run: |-
        git config --global user.name '${{ github.actor }}'
        git config --global user.email '${{ github.actor }}@users.noreply.github.com'
    - uses: frenck/action-setup-yq@v1
    - name: update-application-yaml
      run: |-
        yq e -i '.spec.source.targetRevision = "${{ github.sha }}"' \
          "${ARGOCD_APPLICATION_FILE}"
    - name: git-add-commit
      run: "git add \"${ARGOCD_APPLICATION_FILE}\"\nif git diff-index --quiet HEAD -- 2>/dev/null; then\n  echo \"No changes to commit\"\nelse\n  git commit -m \"${GIT_COMMIT_MESSAGE}\"\nfi"
    - name: argocd-upsert
      run: |-
        argocd app create \
          --grpc-web \
          --upsert \
          --file "${ARGOCD_APPLICATION_FILE}" \
          --sync-policy=none \
          --prompts-enabled=false \
          ;
    - name: argocd-sync
      run: "APP_NAME=$(yq '.metadata.name' \"${ARGOCD_APPLICATION_FILE}\")\necho \"synchronizing: ${APP_NAME}\"\nargocd app sync \\\n  \"${APP_NAME}\" \\\n  --grpc-web \\\n  --timeout 30 \\\n  --retry-limit 3 \\\n  ;"
